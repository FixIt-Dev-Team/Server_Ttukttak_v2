name: test-GCP-CI-CD

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'CI-CD-TEST-RUN'
        required: true
        default: 'warning'
      tags:
        description: 'deploy develop branch to DEV server'

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: "Ttucktak" # TODO: update Google Cloud project id
  REPOSITORY: "wgnwmgm" # TODO: update Artifact Registry repository name
  SERVICE: "ttucktak_server" # TODO: update Cloud Run service name
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE}}
  TERRAFORM_REPO: 'ttukttak-infra-terraform' #TODO: update terraform manage repo
  TERRAFORM_REPO_DIR : '/home/m4a1carbin4/ttukttak-infra-terraform' #TODO: update terraform manage repo name

jobs:
  build:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set Secret yml file.
        run: touch ./src/main/resources/secret.yml && echo "${{ secrets.SECRETYML }}" > ./src/main/resources/secret.yml && cat ./src/main/resources/secret.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      #- name: Build with Gradle
        #run: ./gradlew build
        #shell: bash

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'wgnwmgm'
          password: '${{ secrets.WGNW_DOCKER_TOKEN }}'

      - name: extract version
        run: current_version=$(cat ./build.gradle | grep 'version = ' | awk -F " " '{ print substr($3, 2, length($3) - 2)}')

      #TODO need to setting ttukttak-server-v2 docker build
      #- name: Build and Push Container
        #run: |-
          #docker build -t "${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{current_version}}" ./
          #docker push "${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{current_version}}"

  Terraform-deploy:
    needs: build
    runs-on: self-hosted # ttukttak_dev
    steps:

      - name: check repo update
        run: |-
          remote_repo="https://${GITHUB_ACTOR}:${{secrets.TTUKTTAK_DEV_GIT_KEY}}@github.com/FixIt-Dev-Team/ttukttak-infra-terraform.git"
          git pull "$remote_repo" main
        working-directory: ${{env.TERRAFORM_REPO_DIR}}

      - name: terraform init and validate
        run: |-
          terraform init
          terraform validate
        working-directory: ${{env.TERRAFORM_REPO_DIR}}

      - name: terraform apply
        run: |-
          terraform apply -auto-approve
        working-directory: ${{env.TERRAFORM_REPO_DIR}}