plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'

    // Static Code Analysis
    id 'org.sonarqube' version '4.4.1.3373'
    id 'checkstyle'

    // Junit5
    id 'idea'

    // Junit5 to SwaggerDocs
    id 'com.epages.restdocs-api-spec' version '0.18.2'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

sonar {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'backend-dev-team'
        property 'sonar.projectKey', 'FixIt-Dev-Team_Server_Ttukttak_v2'
    }
}

checkstyle {
    toolVersion = "10.14.0"
}

dependencies {

    // Web Support
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Dev Support
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Security Support
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.5'
    implementation 'com.google.api-client:google-api-client:2.6.0'

    // Database Support
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.5'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Docker Support
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Test Support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation(platform('org.junit:junit-bom:5.10.2'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:5.8.0'

    // Actuator Support-> 향후 모니터링 붙일 것
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Logging Support
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // Slack
    implementation 'com.slack.api:slack-api-client:1.39.0'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Junit5 to SwaggerDocs
    implementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2' //2.2
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

openapi { //2.3
    host = 'localhost:8080'
    basePath = '/api'
    title = 'TtukTtak-openapi'
    description = 'TtukTtak API description with openapi'
    version = '1.0.0'
    format = 'json'
}

openapi3 {
    server = 'https://localhost:8080'
    title = 'TtukTtak-openapi3'
    description = 'TtukTtak API description with openapi3'
    version = '0.0.1'
    format = 'yaml'
}

postman {
    title = 'TtukTtak-postman-docs'
    version = '0.0.1'
    baseUrl = 'https://localhost:8080' // 
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.register('copySwagger',Copy){
    from layout.buildDirectory.file('api-spec/openapi3.yaml')
    into layout.projectDirectory.dir('src/main/resources/static')
}
